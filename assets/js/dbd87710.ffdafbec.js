"use strict";(globalThis.webpackChunktemp_site=globalThis.webpackChunktemp_site||[]).push([[3004],{2684:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"first-contribution","title":"Contributing to Uyuni documentation","description":"Complete guide for contributing to the Uyuni documentation repository, including Git workflows, commit signing, pull request procedures, and review standards.","source":"@site/docs/first-contribution.mdx","sourceDirName":".","slug":"/first-contribution","permalink":"/Uyuni-Docs-Architecture/docs/first-contribution","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/first-contribution.mdx","tags":[{"inline":true,"label":"contribution","permalink":"/Uyuni-Docs-Architecture/docs/tags/contribution"},{"inline":true,"label":"git","permalink":"/Uyuni-Docs-Architecture/docs/tags/git"},{"inline":true,"label":"workflow","permalink":"/Uyuni-Docs-Architecture/docs/tags/workflow"},{"inline":true,"label":"pull-request","permalink":"/Uyuni-Docs-Architecture/docs/tags/pull-request"},{"inline":true,"label":"review","permalink":"/Uyuni-Docs-Architecture/docs/tags/review"},{"inline":true,"label":"collaboration","permalink":"/Uyuni-Docs-Architecture/docs/tags/collaboration"}],"version":"current","frontMatter":{"id":"first-contribution","title":"Contributing to Uyuni documentation","sidebar_label":"Contribution workflow","description":"Complete guide for contributing to the Uyuni documentation repository, including Git workflows, commit signing, pull request procedures, and review standards.","authors":["Joseph Cayouette","Ornela Maric"],"tags":["contribution","git","workflow","pull-request","review","collaboration"]},"sidebar":"tutorialSidebar","previous":{"title":"Welcome","permalink":"/Uyuni-Docs-Architecture/docs/intro"},"next":{"title":"Deployment and installation","permalink":"/Uyuni-Docs-Architecture/docs/category/deployment-and-installation"}}');var s=i(4848),t=i(8453);const o={id:"first-contribution",title:"Contributing to Uyuni documentation",sidebar_label:"Contribution workflow",description:"Complete guide for contributing to the Uyuni documentation repository, including Git workflows, commit signing, pull request procedures, and review standards.",authors:["Joseph Cayouette","Ornela Maric"],tags:["contribution","git","workflow","pull-request","review","collaboration"]},c="Contributing to Uyuni documentation",l={},a=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Required Setup",id:"required-setup",level:3},{value:"Commit Signing Requirements",id:"commit-signing-requirements",level:3},{value:"First-Time Contribution Setup",id:"first-time-contribution-setup",level:2},{value:"Method 1: Contributing Using a Fork (Recommended)",id:"method-1-contributing-using-a-fork-recommended",level:3},{value:"Method 2: Contributing With Direct Write Access",id:"method-2-contributing-with-direct-write-access",level:3},{value:"Development Workflow",id:"development-workflow",level:2},{value:"Creating Feature Branches",id:"creating-feature-branches",level:3},{value:"Branch Naming Conventions",id:"branch-naming-conventions",level:3},{value:"Making Changes",id:"making-changes",level:3},{value:"Commit Message Standards",id:"commit-message-standards",level:3},{value:"Pull Request Process",id:"pull-request-process",level:2},{value:"Pushing Your Branch",id:"pushing-your-branch",level:3},{value:"Creating a Pull Request",id:"creating-a-pull-request",level:3},{value:"Review Standards and Process",id:"review-standards-and-process",level:2},{value:"Review Requirements",id:"review-requirements",level:3},{value:"Review Criteria",id:"review-criteria",level:3},{value:"Reviewer Guidelines",id:"reviewer-guidelines",level:3},{value:"Ongoing Contributions",id:"ongoing-contributions",level:2},{value:"Keeping Your Fork Synchronized",id:"keeping-your-fork-synchronized",level:3},{value:"For Direct Access Contributors",id:"for-direct-access-contributors",level:3},{value:"Starting New Work",id:"starting-new-work",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Workflow Efficiency",id:"workflow-efficiency",level:3},{value:"Quality Assurance",id:"quality-assurance",level:3},{value:"Troubleshooting",id:"troubleshooting",level:3},{value:"Getting Help",id:"getting-help",level:2}];function d(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"contributing-to-uyuni-documentation",children:"Contributing to Uyuni documentation"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Repository:"})," ",(0,s.jsx)(n.a,{href:"https://github.com/uyuni-project/uyuni-docs",children:"https://github.com/uyuni-project/uyuni-docs"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Contribution Model:"})," Fork-based with optional direct access",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Review Requirements:"})," Technical SME + Documentation team approval"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.h3,{id:"required-setup",children:"Required Setup"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"GitHub Account:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Active GitHub account with proper profile setup"}),"\n",(0,s.jsx)(n.li,{children:"Two-factor authentication enabled (recommended)"}),"\n",(0,s.jsx)(n.li,{children:"SSH keys or personal access tokens configured"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Git Configuration:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Configure your identity\ngit config --global user.name "Your Name"\ngit config --global user.email "your.email@example.com"\n\n# Configure default branch behavior\ngit config --global init.defaultBranch master\ngit config --global pull.ff only\n'})}),"\n",(0,s.jsx)(n.h3,{id:"commit-signing-requirements",children:"Commit Signing Requirements"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Commit signing with GPG or SSH key is mandatory."})," Verified commits ensure authenticity and are required for all contributions."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Setup Options:"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"GPG Key Signing:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Generate a GPG key (if you don't have one)\ngpg --full-generate-key\n\n# List your GPG keys\ngpg --list-secret-keys --keyid-format=long\n\n# Configure Git to use your GPG key\ngit config --global user.signingkey <your-key-id>\ngit config --global commit.gpgsign true\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"SSH Key Signing:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Configure Git to use SSH signing\ngit config --global gpg.format ssh\ngit config --global user.signingkey ~/.ssh/id_ed25519.pub\ngit config --global commit.gpgsign true\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Resources:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.github.com/en/authentication/managing-commit-signature-verification/signing-commits",children:"GitHub GPG signing documentation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification#ssh-commit-signature-verification",children:"GitHub SSH signing documentation"})}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"first-time-contribution-setup",children:"First-Time Contribution Setup"}),"\n",(0,s.jsx)(n.h3,{id:"method-1-contributing-using-a-fork-recommended",children:"Method 1: Contributing Using a Fork (Recommended)"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Step 1: Fork the Repository"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Navigate to ",(0,s.jsx)(n.a,{href:"https://github.com/uyuni-project/uyuni-docs",children:"https://github.com/uyuni-project/uyuni-docs"})]}),"\n",(0,s.jsx)(n.li,{children:'Click the "Fork" button in the top-right corner'}),"\n",(0,s.jsx)(n.li,{children:"Select your GitHub account as the destination"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Step 2: Clone Your Fork"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Clone your forked repository\ngit clone https://github.com/<your-username>/uyuni-docs.git\ncd uyuni-docs\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Step 3: Configure Remotes"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Verify your origin remote (should point to your fork)\ngit remote -v\n\n# Add the upstream repository\ngit remote add upstream https://github.com/uyuni-project/uyuni-docs.git\n\n# Verify both remotes are configured\ngit remote -v\n# Should show:\n# origin    https://github.com/<your-username>/uyuni-docs.git (fetch)\n# origin    https://github.com/<your-username>/uyuni-docs.git (push)\n# upstream  https://github.com/uyuni-project/uyuni-docs.git (fetch)\n# upstream  https://github.com/uyuni-project/uyuni-docs.git (push)\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Step 4: Set Up Master Branch"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Switch to master branch\ngit checkout master\n\n# Fetch latest changes from upstream\ngit fetch upstream\n\n# Merge upstream changes into your local master\ngit merge upstream/master\n\n# Push updated master to your fork\ngit push origin master\n"})}),"\n",(0,s.jsx)(n.h3,{id:"method-2-contributing-with-direct-write-access",children:"Method 2: Contributing With Direct Write Access"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"For team members with repository write access:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Clone the repository directly\ngit clone https://github.com/uyuni-project/uyuni-docs.git\ncd uyuni-docs\n\n# Switch to master branch\ngit checkout master\n\n# Verify you're on the correct branch\ngit branch\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,s.jsx)(n.h3,{id:"creating-feature-branches",children:"Creating Feature Branches"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Always create feature branches for your work:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Ensure you're on an updated master branch\ngit checkout master\ngit fetch upstream  # (for forks) or git fetch --all (for direct access)\ngit merge upstream/master  # (for forks) or git pull --ff-only (for direct access)\n\n# Create and switch to a new feature branch\ngit checkout -b feature/update-readme-improvements\n\n# Alternative descriptive branch names:\n# git checkout -b fix/broken-links-chapter-3\n# git checkout -b docs/new-installation-guide\n# git checkout -b update/api-documentation\n"})}),"\n",(0,s.jsx)(n.h3,{id:"branch-naming-conventions",children:"Branch Naming Conventions"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Use descriptive, lowercase branch names with hyphens:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"feature/description-of-feature"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"fix/description-of-fix"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"docs/description-of-documentation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"update/description-of-update"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"feature/salt-master-configuration"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"fix/broken-links-installation-guide"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"docs/api-reference-channels"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"update/system-requirements-suse15"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"making-changes",children:"Making Changes"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Development Best Practices:"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Make focused, logical changes"})," related to a single issue or improvement"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Test your changes locally"})," before committing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Follow documentation style guides"})," and existing conventions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Keep commits atomic"})," - one logical change per commit"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Commit Process:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Stage specific files (preferred over git add .)\ngit add path/to/changed/file1.md path/to/changed/file2.md\n\n# Or stage all changes (use with caution)\ngit add .\n\n# Commit with a descriptive message (will be signed automatically)\ngit commit -m "Add installation steps for SUSE Linux Enterprise 15 SP4\n\n- Include package repository configuration\n- Add firewall configuration requirements  \n- Update system requirements table"\n\n# Verify your commit is signed\ngit log --show-signature -1\n'})}),"\n",(0,s.jsx)(n.h3,{id:"commit-message-standards",children:"Commit Message Standards"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Format:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Short summary (50 chars or less)\n\nLonger description if needed, wrapping at 72 characters. \nExplain what and why, not how. Use bullet points if helpful:\n\n- First improvement or change\n- Second improvement or change\n- Third improvement or change\n\nFixes #123\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Best Practices:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'Use imperative mood ("Add" not "Added" or "Adding")'}),"\n",(0,s.jsx)(n.li,{children:"Capitalize first letter of summary"}),"\n",(0,s.jsx)(n.li,{children:"No period at end of summary"}),"\n",(0,s.jsx)(n.li,{children:"Leave blank line between summary and description"}),"\n",(0,s.jsx)(n.li,{children:'Reference issues with "Fixes #123" or "Closes #123"'}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"pull-request-process",children:"Pull Request Process"}),"\n",(0,s.jsx)(n.h3,{id:"pushing-your-branch",children:"Pushing Your Branch"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Push your feature branch to your fork (first time)\ngit push --set-upstream origin feature/your-branch-name\n\n# Subsequent pushes (after the upstream is set)\ngit push\n"})}),"\n",(0,s.jsx)(n.h3,{id:"creating-a-pull-request",children:"Creating a Pull Request"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Step 1: Navigate to GitHub"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Go to your fork on GitHub"}),"\n",(0,s.jsx)(n.li,{children:"GitHub will often show a banner suggesting you create a PR"}),"\n",(0,s.jsx)(n.li,{children:'Or navigate to the upstream repository and click "New Pull Request"'}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Step 2: Configure Your PR"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Title Guidelines:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Clear, descriptive summary of changes"}),"\n",(0,s.jsxs)(n.li,{children:["Prefix with ",(0,s.jsx)(n.code,{children:"[WIP]"})," if work is incomplete"]}),"\n",(0,s.jsxs)(n.li,{children:["Examples:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Add Salt configuration examples for channel management"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"[WIP] Update installation guide for containerized deployments"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Fix broken cross-references in API documentation"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description Template:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-markdown",children:"## Summary\nBrief description of what this PR accomplishes.\n\n## Changes Made\n- Specific change 1\n- Specific change 2\n- Specific change 3\n\n## Testing\n- [ ] Verified documentation builds without errors\n- [ ] Checked all links are functional\n- [ ] Reviewed for spelling and grammar\n- [ ] Tested any code examples included\n\n## Related Issues\nFixes #123\nRelates to #456\n\n## Review Notes\nAny specific areas where you'd like reviewer focus or have questions.\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Step 3: Request Reviews"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Required:"})," One SME (Subject Matter Expert) for technical changes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Required:"})," One documentation team member for all changes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Optional:"})," Additional stakeholders as appropriate"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Step 4: Mark as Draft (if needed)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use Draft PR for work in progress"}),"\n",(0,s.jsx)(n.li,{children:"Convert to ready for review when complete"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"review-standards-and-process",children:"Review Standards and Process"}),"\n",(0,s.jsx)(n.h3,{id:"review-requirements",children:"Review Requirements"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"All Pull Requests Must Have:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"One approval from a documentation team member"}),"\n",(0,s.jsx)(n.li,{children:"One approval from an SME (for technical content changes)"}),"\n",(0,s.jsx)(n.li,{children:"All conversations resolved"}),"\n",(0,s.jsx)(n.li,{children:"Passing CI/CD checks"}),"\n",(0,s.jsx)(n.li,{children:"Signed commits"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"review-criteria",children:"Review Criteria"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Content Quality:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Technical accuracy and completeness"}),"\n",(0,s.jsx)(n.li,{children:"Clear writing and appropriate audience level"}),"\n",(0,s.jsx)(n.li,{children:"Consistent style and formatting"}),"\n",(0,s.jsx)(n.li,{children:"Proper cross-references and linking"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Process Compliance:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Follows contribution guidelines"}),"\n",(0,s.jsx)(n.li,{children:"Appropriate branch naming and commit messages"}),"\n",(0,s.jsx)(n.li,{children:"Proper issue references and documentation"}),"\n",(0,s.jsx)(n.li,{children:"No merge conflicts with master"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"reviewer-guidelines",children:"Reviewer Guidelines"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"For Reviewers:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Do not merge another author's PR"})," without explicit permission"]}),"\n",(0,s.jsx)(n.li,{children:"Provide constructive, specific feedback"}),"\n",(0,s.jsx)(n.li,{children:"Test documentation builds and functionality"}),"\n",(0,s.jsx)(n.li,{children:"Verify technical accuracy within your expertise"}),"\n",(0,s.jsx)(n.li,{children:"Approve only when all concerns are addressed"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"For Contributors:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Address all review feedback promptly"}),"\n",(0,s.jsx)(n.li,{children:"Ask for clarification on unclear feedback"}),"\n",(0,s.jsx)(n.li,{children:"Update your branch with requested changes"}),"\n",(0,s.jsx)(n.li,{children:"Resolve conversations when changes are made"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"ongoing-contributions",children:"Ongoing Contributions"}),"\n",(0,s.jsx)(n.h3,{id:"keeping-your-fork-synchronized",children:"Keeping Your Fork Synchronized"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Essential for avoiding conflicts - do this before starting new work:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Switch to master branch\ngit checkout master\n\n# Fetch latest changes from upstream\ngit fetch upstream\n\n# Merge upstream changes (fast-forward only)\ngit merge upstream/master\n\n# Push updated master to your fork\ngit push origin master\n"})}),"\n",(0,s.jsx)(n.h3,{id:"for-direct-access-contributors",children:"For Direct Access Contributors"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Switch to master branch\ngit checkout master\n\n# Fetch all remote branches and tags\ngit fetch --all\n\n# Update master with latest changes (fast-forward only)\ngit pull --ff-only\n\n# Clean up merged branches (optional)\ngit branch --merged | grep -v master | xargs -n 1 git branch -d\n"})}),"\n",(0,s.jsx)(n.h3,{id:"starting-new-work",children:"Starting New Work"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Always start from an updated master:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Ensure master is current (see synchronization steps above)\ngit checkout master\n\n# Create new feature branch\ngit checkout -b feature/new-feature-name\n\n# Begin your work...\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(n.h3,{id:"workflow-efficiency",children:"Workflow Efficiency"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Commit Early and Often:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Make small, logical commits during development"}),"\n",(0,s.jsx)(n.li,{children:"Push work-in-progress branches regularly"}),"\n",(0,s.jsx)(n.li,{children:"Use Draft PRs for ongoing work visibility"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Stay Synchronized:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Update your master branch daily"}),"\n",(0,s.jsx)(n.li,{children:"Rebase feature branches when needed to avoid conflicts"}),"\n",(0,s.jsx)(n.li,{children:"Communicate with team about potentially conflicting work"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"quality-assurance",children:"Quality Assurance"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Before Submitting:"})}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Documentation builds successfully"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","All links function correctly"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Spelling and grammar checked"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Code examples tested (if applicable)"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Follows style guide conventions"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Commit messages are clear and descriptive"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Collaboration:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Communicate early about significant changes"}),"\n",(0,s.jsx)(n.li,{children:"Ask for early feedback on complex work"}),"\n",(0,s.jsx)(n.li,{children:"Coordinate with SMEs for technical content"}),"\n",(0,s.jsx)(n.li,{children:"Update related documentation when making changes"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Common Issues:"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Merge Conflicts:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Update your master branch first\ngit checkout master\ngit fetch upstream\ngit merge upstream/master\n\n# Rebase your feature branch\ngit checkout feature/your-branch\ngit rebase master\n\n# Resolve conflicts in your editor, then:\ngit add .\ngit rebase --continue\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Unsigned Commits:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Sign previous commit\ngit commit --amend --no-edit -S\n\n# Or sign all commits in current branch\ngit rebase --exec 'git commit --amend --no-edit -S' master\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Wrong Branch:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Move uncommitted changes to correct branch\ngit stash\ngit checkout correct-branch\ngit stash pop\n\n# Move committed changes to new branch\ngit checkout -b correct-branch\ngit checkout wrong-branch\ngit reset --hard HEAD~1  # removes last commit from wrong branch\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Resources:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Documentation team:"})," Reach out in team Slack channels"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Technical SMEs:"})," Contact appropriate product team members"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"GitHub Issues:"})," Create issues for bugs or enhancement requests"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Team meetings:"})," Bring questions to regular team meetings"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Emergency Contacts:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"For urgent documentation issues affecting releases"}),"\n",(0,s.jsx)(n.li,{children:"For repository access or permissions problems"}),"\n",(0,s.jsx)(n.li,{children:"For CI/CD pipeline failures blocking merges"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"This workflow ensures high-quality contributions while maintaining efficient collaboration across the documentation team and broader Uyuni community."})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var r=i(6540);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);